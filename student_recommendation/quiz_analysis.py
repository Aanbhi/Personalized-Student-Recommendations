# -*- coding: utf-8 -*-
"""quiz_analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dzX6j-AHzDB6KMXtJ4bK-eknEfT42l2E
"""

import matplotlib.pyplot as plt

# Sample data for quiz performance
quizzes = ['Quiz 1', 'Quiz 2', 'Quiz 3', 'Quiz 4', 'Quiz 5']
scores = [80, 85, 75, 90, 95]

# Plotting the line graph
plt.figure(figsize=(10, 6))
plt.plot(quizzes, scores, marker='o', linestyle='-', color='b')
plt.title('Quiz Performance Trends')
plt.xlabel('Quiz')
plt.ylabel('Score')
plt.grid(True)
plt.show()

import matplotlib.pyplot as plt

# Sample data for topics and correctness
topics = ['Math', 'Science', 'History', 'Literature']
accuracy = [70, 85, 60, 95]

# Plotting the bar chart
plt.figure(figsize=(10, 6))
plt.bar(topics, accuracy, color=['red', 'green', 'blue', 'orange'])
plt.title('Strong & Weak Topics')
plt.xlabel('Topic')
plt.ylabel('Accuracy (%)')
plt.show()

import matplotlib.pyplot as plt

# Sample data for difficulty level and performance
difficulty_levels = [1, 2, 3, 4, 5]  # 1 is easy, 5 is hard
scores = [90, 85, 75, 80, 70]

# Plotting the scatter plot
plt.figure(figsize=(10, 6))
plt.scatter(difficulty_levels, scores, color='purple')
plt.title('Difficulty Level vs Performance')
plt.xlabel('Difficulty Level')
plt.ylabel('Score')
plt.grid(True)
plt.show()

import seaborn as sns
import numpy as np
import matplotlib.pyplot as plt

# Sample data for mistakes across different topics
data = np.array([[5, 3, 2], [1, 4, 3], [3, 5, 1]])
topics = ['Math', 'Science', 'History']
mistakes = ['Easy', 'Medium', 'Hard']

# Plotting the heatmap
plt.figure(figsize=(8, 6))
sns.heatmap(data, annot=True, cmap='coolwarm', xticklabels=topics, yticklabels=mistakes)
plt.title('Mistakes & Patterns')
plt.xlabel('Topic')
plt.ylabel('Difficulty Level')
plt.show()

import matplotlib.pyplot as plt

# Sample data for student personas
personas = ['Conceptual Learner', 'Fast but Inaccurate', 'Consistent Performer']
percentages = [40, 30, 30]

# Plotting the pie chart
plt.figure(figsize=(8, 8))
plt.pie(percentages, labels=personas, autopct='%1.1f%%', startangle=90)
plt.title('Student Personas')
plt.show()